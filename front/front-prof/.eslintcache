[{"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/index.js":"1","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/App.js":"2","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/context/userContext.js":"3","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/hooks/useUserAuth.js":"4","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/Authenticated.jsx":"5","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/Unauthenticated.jsx":"6","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/shared/spinner/Spinner.jsx":"7","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/config/config.js":"8","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/helper/history.js":"9","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/helper/setAuthToken.js":"10","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/actions/userActions.js":"11","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/reducers/UserReducer.js":"12","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/login/Login.jsx":"13","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/home/Home.jsx":"14","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/routes/Routes.js":"15","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/shared/enum/roles.js":"16","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/shared/header/Header.jsx":"17","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/shared/Side-bar/SideBar.jsx":"18","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/main/Main.jsx":"19","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/shared/footer/Footer.jsx":"20","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/matiere/MatiÃ©re.jsx":"21","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/absence/absence.jsx":"22","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/note/note.js":"23"},{"size":574,"mtime":1612622550982,"results":"24","hashOfConfig":"25"},{"size":1042,"mtime":1612623035904,"results":"26","hashOfConfig":"25"},{"size":645,"mtime":1612561488327,"results":"27","hashOfConfig":"25"},{"size":2531,"mtime":1612561488335,"results":"28","hashOfConfig":"25"},{"size":315,"mtime":1612623334374,"results":"29","hashOfConfig":"25"},{"size":324,"mtime":1612623334354,"results":"30","hashOfConfig":"25"},{"size":808,"mtime":1612561881213,"results":"31","hashOfConfig":"25"},{"size":68,"mtime":1612565623404,"results":"32","hashOfConfig":"25"},{"size":111,"mtime":1612561385044,"results":"33","hashOfConfig":"25"},{"size":305,"mtime":1612561385044,"results":"34","hashOfConfig":"25"},{"size":304,"mtime":1612561488327,"results":"35","hashOfConfig":"25"},{"size":576,"mtime":1612561488335,"results":"36","hashOfConfig":"25"},{"size":7378,"mtime":1612623257062,"results":"37","hashOfConfig":"25"},{"size":719,"mtime":1612623104859,"results":"38","hashOfConfig":"25"},{"size":613,"mtime":1612944609348,"results":"39","hashOfConfig":"25"},{"size":81,"mtime":1612561881213,"results":"40","hashOfConfig":"25"},{"size":13790,"mtime":1612580977994,"results":"41","hashOfConfig":"25"},{"size":4441,"mtime":1612944505301,"results":"42","hashOfConfig":"25"},{"size":6852,"mtime":1612947110331,"results":"43","hashOfConfig":"25"},{"size":617,"mtime":1612561881213,"results":"44","hashOfConfig":"25"},{"size":9220,"mtime":1612635155131,"results":"45","hashOfConfig":"25"},{"size":9050,"mtime":1612944609328,"results":"46","hashOfConfig":"25"},{"size":9305,"mtime":1612945887024,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1801wnh",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/index.js",[],["105","106"],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/App.js",["107"],"import {lazy, Suspense, useContext} from \"react\";\nimport UserProvider, {Context} from \"./context/userContext\";\nimport {useUserAuthentication} from \"./hooks/useUserAuth\";\nimport Spinner from \"./component/shared/spinner/Spinner\";\n\n\n\n\nconst Authenticated = lazy(() => import(\"./Authenticated\"))\nconst Unauthenticated = lazy(() => import(\"./Unauthenticated\"))\n\nfunction App() {\n\n  const {user, dispatch} = useContext(Context)\n  const {loading, isLoggedIn} = useUserAuthentication(user, dispatch);\n\n  return (\n      <>\n        {\n          loading ?\n              (<Spinner/>) :\n              (\n                  isLoggedIn === false ?\n                      (<Suspense fallback={<Spinner/>}>\n                        <Unauthenticated/>\n                      </Suspense>)\n                      :\n                      (<Suspense fallback={<Spinner/>}>\n                        <Authenticated/>\n                      </Suspense>)\n              )\n        }\n      </>\n  );\n}\n\nexport default () => (\n    <UserProvider>\n      <App/>\n    </UserProvider>\n)\n\n","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/context/userContext.js",[],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/hooks/useUserAuth.js",["108","109"],"import { useCallback, useContext, useEffect, useState } from 'react';\nimport { Context } from \"../context/userContext\";\nimport { BASE_URL } from \"../config/config\"\n\nimport axios from \"axios\";\nimport setAuthToken from '../helper/setAuthToken';\nimport history from '../helper/history';\nimport {setInfo, setLogin} from '../actions/userActions';\nimport jwtDecode from \"jwt-decode\";\n\nexport const useUserAuthentication = () => {\n\n    const { user, dispatch } = useContext(Context);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(true);\n\n    const getUserByEmail = useCallback(\n        async (email) => {\n            await axios.get(`${BASE_URL}api/users/user?email=${email}`)\n                .then(async res => {\n                    await dispatch(setInfo(res.data));\n                    window.localStorage.setItem('user', JSON.stringify(res.data))\n                })\n                .catch((err) => console.log(err));\n        }, []);\n\n    const fetchUser = useCallback(\n        async () => {\n            try {\n                const token = window.localStorage.getItem('token')\n                if (token) {\n                    await axios({\n                        method: 'GET',\n                        url: `${BASE_URL}api/users/refreshToken`,\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-auth-token': `Bearer ${token}`,\n                        },\n                    }).then(\n                        async res => {\n                            if (res.data.status === 403) {\n                                history.push('/login');\n                            }\n                            setAuthToken(token)\n                            dispatch(setLogin(res.data.jwt));\n                            var decode = await jwtDecode(res.data.jwt);\n                            await getUserByEmail(decode.sub)\n                            setLoading(false)\n                        }\n                    );\n                } else {\n                    history.push('/login');\n                }\n            } catch (err) {\n                setError(err);\n            } finally {\n                setLoading(false);\n            }\n        }, [dispatch]);\n\n    useEffect(() => {\n        if (user.isLoggedIn === false) {\n            fetchUser()\n        }\n        return () => setLoading(false)\n    }, [fetchUser, user.isLoggedIn])\n\n    return {\n        error,\n        loading,\n        isLoggedIn: user.isLoggedIn,\n    }\n}","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/Authenticated.jsx",["110"],"import React from 'react'\nimport {Route, Router, Switch} from 'react-router-dom'\nimport history from './helper/history'\nimport Home from \"./component/home/Home\";\n\n\nexport default () => (\n    <Router history={history}>\n        <Switch>\n            <Route path='/' component={Home}/>\n        </Switch>\n    </Router>\n)","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/Unauthenticated.jsx",["111"],"import React from 'react'\nimport {Route, Router, Switch} from 'react-router-dom'\nimport history from './helper/history'\nimport Login from \"./component/login/Login\";\n\nexport default () => (\n    <Router history={history}>\n        <Switch>\n            <Route path='/login' component={Login}/>\n        </Switch>\n    </Router>\n)\n","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/shared/spinner/Spinner.jsx",[],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/config/config.js",[],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/helper/history.js",[],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/helper/setAuthToken.js",["112"],"import axios from 'axios'\n\nexport default (token) => {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n        axios.defaults.headers.common['Content-Type'] = `application/json`\n    } else {\n        delete axios.defaults.headers.common['Authorization']\n    }\n}\n","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/actions/userActions.js",[],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/reducers/UserReducer.js",[],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/login/Login.jsx",["113"],"import React, {useCallback, useContext} from 'react'\nimport {Form, Input, Checkbox, Button, message} from 'antd';\nimport {useHistory} from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport axios from \"axios\";\nimport {role} from \"../shared/enum/roles\";\nimport {Context} from \"../../context/userContext\";\nimport {BASE_URL} from \"../../config/config\";\nimport {setInfo, setLogin} from \"../../actions/userActions\";\nimport setAuthToken from \"../../helper/setAuthToken\";\n\n\nexport default function Login() {\n\n    const {dispatch} = useContext(Context);\n\n    const history = useHistory();\n\n    const email = React.useRef(\"\");\n    const pass = React.useRef(\"\");\n\n    const getUserByEmail = useCallback(\n        async (email) => {\n            await axios.get(`${BASE_URL}api/users/user?email=${email}`)\n                .then(async res => {\n                    await dispatch(setInfo(res.data));\n                     window.localStorage.setItem('user', JSON.stringify(res.data))\n                })\n                .catch((err) => console.log(err));\n        }, [dispatch]);\n\n\n    const login = useCallback(\n        async (user) => {\n            await fetch(`${BASE_URL}api/users/login`, {\n                method: \"POST\",\n                body: JSON.stringify(user),\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                },\n            }).then(res => res.json())\n                .then(\n                    async res => {\n                        if (res.status === 403 || res.message === \"Access Denied\") {\n                            message.error(\"Email or password are wrong !!\");\n                        } else {\n                            var decode = await jwtDecode(res.jwt);\n                            if (decode.roles[0] === role.prof) {\n                                message.success(\"Login succes !!\");\n                                await dispatch(setLogin(res.jwt));\n                                setAuthToken(res.jwt);\n                                window.localStorage.setItem('token', res.refreshJwt);\n                                await getUserByEmail(decode.sub);\n                                history.push(\"/\");\n\n                            } else {\n                                message.error(\"Acces denied !!\");\n                            }\n                        }\n                    });\n        },\n        [dispatch, history],\n    );\n\n    const onFinish = async values => {\n        await login(values);\n    }\n\n    return (\n        <div className=\"bg-dark\">\n            <div id=\"layoutAuthentication\">\n                <div id=\"layoutAuthentication_content\">\n                    <main>\n                        <div className=\"container\">\n                            <div className=\"row justify-content-center\">\n                                <div className=\"col-lg-5\">\n                                    <div className=\"card shadow-lg border-0 rounded-lg mt-4\">\n                                        <div className=\"card-header justify-content-center\"><h3\n                                            className=\"font-weight-light my-4\">Login</h3></div>\n                                        <div className=\"card-body\">\n                                            <Form\n                                                name=\"basic\"\n                                                initialValues={{remember: false}}\n                                                onFinish={onFinish}\n                                                layout=\"vertical\"\n                                            >\n                                                <Form.Item\n                                                    label=\"Email\"\n                                                    name=\"email\"\n                                                    className=\"small mb-1 my-4\"\n                                                    rules={[\n                                                        {required: true, message: 'email required!'},\n                                                        {type: 'email', message: 'Incorrect email!'}\n                                                    ]}\n                                                    ref={email}\n                                                >\n                                                    <Input size=\"large\" className=\"form-control py-2\" ref={email}/>\n                                                </Form.Item>\n                                                <div className=\"form-group\">\n                                                    <Form.Item\n                                                        className=\"small mb-1 my-4\"\n                                                        label=\"Mot de passe\"\n                                                        name=\"password\"\n                                                        rules={[{required: true, message: 'mot de passe required !'}]}\n                                                    >\n                                                        <Input.Password size=\"large\" className=\"form-control py-2\"\n                                                                        ref={pass}/>\n                                                    </Form.Item>\n                                                </div>\n                                                <Form.Item className=\"custom-control custom-checkbox\" name=\"remember\"\n                                                           valuePropName=\"checked\">\n                                                    <Checkbox>Remember me</Checkbox>\n                                                </Form.Item>\n\n                                                <Form.Item>\n                                                    <Button block shape=\"round\" type=\"primary\" htmlType=\"submit\"\n                                                            size=\"large\">\n                                                        Login\n                                                    </Button>\n                                                </Form.Item>\n                                            </Form>\n                                        </div>\n                                        <div className=\"card-footer text-center\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </main>\n                </div>\n                <div id=\"layoutAuthentication_footer\">\n                    <footer className=\"footer mt-auto footer-dark\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6 small\">\n                                    Copyright &#xA9; Your Website 2020\n                                </div>\n                                <div className=\"col-md-6 text-md-right small\">\n                                    <a href=\"#!\">Privacy Policy</a>&#xB7;\n                                    <a href=\"#!\">Terms &amp; Conditions</a>\n                                </div>\n                            </div>\n                        </div>\n                    </footer>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/home/Home.jsx",[],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/routes/Routes.js",[],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/shared/enum/roles.js",[],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/shared/header/Header.jsx",[],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/shared/Side-bar/SideBar.jsx",["114"],"import React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\nimport {Menu} from 'antd';\nimport {MailOutlined, UsergroupDeleteOutlined, SettingOutlined} from '@ant-design/icons';\nimport axios from \"axios\";\nimport {BASE_URL} from \"../../../config/config\";\n\nconst {SubMenu} = Menu;\n\nfunction SideBar(props) {\n\n\n    const [user] = useState(JSON.parse(window.localStorage.getItem('user')))\n\n    const [matieres, setMatieres] = useState([]);\n\n    const getMatire = useCallback(() => {\n        axios.get(`${BASE_URL}api/elementModule/prof/${user.id}`)\n            .then(res => setMatieres(res.data))\n    }, [user.id]);\n\n    useEffect(() => {\n        getMatire();\n    }, [getMatire])\n\n    return (\n        <div id=\"layoutSidenav_nav\">\n            <nav className=\"sidenav shadow-right sidenav-light\">\n                <div className=\"sidenav-menu\">\n                    <div className=\"nav accordion\" id=\"accordionSidenav\">\n                        <Menu\n                            style={{height: '79vh', marginTop: 20, overflowY: \"hidden\"}}\n                            defaultOpenKeys={['dash']}\n                            mode=\"inline\"\n                            className=\"sidenav-menu-heading\"\n                            aria-orientation=\"vertical\"\n                        >\n                            <Menu.Item key=\"dash\" icon={<Icon.Activity size={20}/>}>\n                                <Link to=\"/\">\n                                    DashBord\n                                </Link>\n                            </Menu.Item>\n                            <SubMenu key=\"fl\" icon={<SettingOutlined/>} title=\"Les matiÃ©res \">\n                                {\n                                    matieres.map(m =>\n                                        <Menu.Item key={m.id}>\n                                            <Link to={{\n                                                pathname: `/matiere/${m.id}`,\n                                                state: m\n                                            }}>\n                                                {m.nomElement}\n                                            </Link>\n                                        </Menu.Item>\n                                    )\n                                }\n                            </SubMenu>\n                            <SubMenu key=\"serv\" icon={<MailOutlined/>} title=\"Gestion d'absence'\">\n                                {\n                                    matieres.map(m =>\n                                        <Menu.Item key={m.id + \"\" + m.nomElement}>\n                                            <Link to={{\n                                                pathname: `/absence/${m.id}`,\n                                                state: m\n                                            }}>\n                                                {m.nomElement}\n                                            </Link>\n                                        </Menu.Item>\n                                    )\n                                }\n                            </SubMenu>\n                            <SubMenu key=\"serv\" icon={<MailOutlined/>} title=\"Gestion des notes'\">\n                                {\n                                    matieres.map(m =>\n                                        <Menu.Item key={m.id + \"\" + m.nomElement}>\n                                            <Link to={{\n                                                pathname: `/note/${m.id}`,\n                                                state: m\n                                            }}>\n                                                {m.nomElement}\n                                            </Link>\n                                        </Menu.Item>\n                                    )\n                                }\n                            </SubMenu>\n                        </Menu>\n                    </div>\n                </div>\n\n                <div className=\"sidenav-footer\">\n                    <div className=\"sidenav-footer-content\">\n                        <div className=\"sidenav-footer-subtitle\">Logged in as:</div>\n                        <div className=\"sidenav-footer-title\">{user.nom + \" \" + user.prenom}</div>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    );\n}\n\nexport default SideBar;","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/main/Main.jsx",["115","116"],"import React, {useState, useCallback, useEffect} from \"react\";\nimport * as Icon from \"react-feather\";\nimport Footer from \"../shared/footer/Footer\";\nimport {Pie, Line} from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport {BASE_URL} from \"../../config/config\";\nimport {message} from \"antd\";\n\n\nexport default function MainS() {\n    const {REACT_APP_URL} = process.env;\n\n    const [id, setId] = useState(\"\");\n    const [absenceByModule, setAbsenceByModule] = useState([]);\n    const [noteByModule, setNoteByModule] = useState([]);\n\n\n    const getAbsenceByModule = useCallback(\n        () => {\n            axios.get(`${BASE_URL}api/absence/dash`)\n                .then((res) => {\n                    if (res.status === 200) {\n                        setAbsenceByModule(res.data)\n                    } else {\n                        message.error(\"Error server \", res.data.message);\n                    }\n                }).catch((err) => message.error(\"Error server \", err.message))\n\n        }, [id]);\n\n    const getNoteByModule = useCallback(\n        () => {\n            axios.get(`${BASE_URL}api/notes/dash`)\n                .then(({data, status}) => {\n                    status === 200 ? setNoteByModule(data)\n                        : message.error(\"Error server \", data.message);\n                }).catch((err) => message.error(\"Error server \", err.message))\n        }, [id]);\n\n\n    const getId = useCallback(async () => {\n        let user = await JSON.parse(window.localStorage.getItem('user'));\n        setId(user?.id);\n    }, [])\n\n\n    useEffect(() => {\n        getId();\n        getAbsenceByModule();\n        getNoteByModule();\n    }, [getAbsenceByModule, getNoteByModule, getId]);\n\n    const dataAbsence = {\n        labels: absenceByModule?.map(nAbsM => nAbsM?.module),\n        datasets: [\n            {\n                label: 'Nombre des absences par module',\n                data: absenceByModule.map((nbr) => nbr?.nbrAbsence),\n                fill: true,\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: 'rgba(75,192,192,1)',\n            }\n        ]\n    }\n\n    const dataPie = {\n        labels: noteByModule?.map(el => el?.nomElement),\n        datasets: [\n            {\n                label: 'Les notes par element module ',\n                data: noteByModule?.map(el => el?.noteModule),\n                fill: false,\n                borderColor: 'white',\n                backgroundColor: ['red', 'blue', 'rgba(75,192,192,0.4)'],\n\n            }\n        ]\n    }\n\n\n    return (\n        <div id=\"layoutSidenav_content\">\n            <main>\n                <header className=\"page-header page-header-dark bg-gradient-primary-to-secondary pb-10\">\n                    <div className=\"container\">\n                        <div className=\"page-header-content pt-4\">\n                            <div className=\"row align-items-center justify-content-between\">\n                                <div className=\"col-auto mt-4\">\n                                    <h1 className=\"page-header-title\">\n                                        <div className=\"page-header-icon\"><Icon.Activity size={25}/></div>\n                                        Dashboard\n                                    </h1>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </header>\n                <div className=\"container mt-n10\">\n                    <div className=\"row\">\n                        <div className=\"col-xxl-12 col-xl-12 mb-4\">\n                            <div className=\"card h-100\">\n                                <div className=\"card-body h-100 d-flex flex-column justify-content-center py-5 py-xl-4\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-xl-8 col-xxl-12\">\n                                            <div className=\"text-center px-4 mb-4 mb-xl-0 mb-xxl-4\">\n                                                <h1 className=\"text-primary\">Welcome Back!</h1>\n                                                <p className=\"text-gray-700 mb-0\">It&apos;s time to get started! View\n                                                    new opportunities now, or continue on your previous work.</p>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-xl-4 col-xxl-12 text-center\">\n                                            <img className=\"img-fluid\"\n                                                 src={`${REACT_APP_URL}/assets/img/freepik/at-work-pana.svg`}\n                                                 style={{maxWidth: \"26rem\"}}\n                                                 alt=\"at-work img\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div className=\"row\">\n                        <div className=\"col-xxl-6 col-xl-6 mb-4 \">\n                            <div className=\"card card-header-actions h-100\">\n                                <div className=\"card-header\">\n                                    Les absences par module\n                                </div>\n                                <div className=\"card-body\">\n                                    <Line\n                                        data={dataAbsence}\n                                        width={100}\n                                        height={300}\n                                        options={{maintainAspectRatio: false}}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-xxl-6 col-xl-6 mb-4\">\n                            <div className=\"card card-header-actions h-100\">\n                                <div className=\"card-header\">\n                                    Les notes de chaque elemnt de module\n                                </div>\n                                <div className=\"card-body\">\n                                    <Pie\n                                        data={dataPie}\n                                        width={100}\n                                        height={300}\n                                        options={{maintainAspectRatio: false}}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n\n            <Footer/>\n        </div>\n    )\n}","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/shared/footer/Footer.jsx",[],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/matiere/MatiÃ©re.jsx",["117","118"],"import React, {useEffect, useState, useCallback} from 'react';\nimport {useLocation, useParams} from \"react-router\";\nimport * as Icon from 'react-feather';\nimport {List, Card, Form, Row, Upload, message, Col, Input, Button} from 'antd';\nimport {InboxOutlined,FilePdfOutlined} from '@ant-design/icons';\nimport axios from 'axios';\nimport {BASE_URL} from \"../../config/config\"\n\n\nconst MatiÃ©re = () => {\n\n    const {Dragger} = Upload;\n\n    const [form] = Form.useForm();\n    const {id} = useParams();\n    let location = useLocation();\n\n    const [file, setfile] = useState();\n    const [data, setData] = useState([]);\n    const [gridConfig] = useState({\n        gutter: 16,\n        xs: 1,\n        sm: 2,\n        md: 4,\n        lg: 4,\n        xl: 6,\n        xxl: 3,\n    });\n\n    useEffect(() => {\n        console.log(location.state.cours)\n        setData(location.state.cours);\n    }, [location.state]);\n\n    const props = {\n        name: 'contenue',\n        multiple: false,\n        onChange(info) {\n            console.log(info.file);\n            setfile(info.file)\n        },\n        beforeUpload: f => {\n            setfile(f);\n            return false;\n        },\n        file,\n    };\n\n    const onFinish = useCallback(\n        async (values) => {\n            console.log(\"values --> \",values);\n            const formData = new FormData();\n            values.contenue.fileList.forEach(f => formData.append('contenue', f.originFileObj));\n            formData.append(\"titreCour\", values.titreCour);\n            formData.append(\"nbrHeure\", values.nbrHeure);\n            formData.append(\"elementId\", location.state.id);\n            console.log(\"Formadata ---> \",formData);\n            for (var key of formData.entries()) {\n                console.log(key[0] + ', ' + key[1]);\n            }\n            await axios.post(`${BASE_URL}api/cour/`, formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                },\n            }).then(res => {\n                console.log(res);\n                if (res.data.status === 403) {\n                    message.error('ERROR lors d\\'evoie du fichier');\n                } else {\n                    setData([...data, res.data]);\n                    message.success(\"Filiere\" + values.nomFormation + \"bien ajouter\");\n                }\n            }).catch(err => {\n                console.log(err);\n                message.error('ERROR lors d\\'evoie du fichier');\n            });\n        },\n        [],\n    )\n\n\n    return (\n        <div id=\"layoutSidenav_content\">\n            <main>\n                <header className=\"page-header page-header-dark bg-gray-500\">\n                    <div className=\"container\">\n                        <div className=\"page-header-content pt-4\">\n                            <div className=\"row align-items-center justify-content-center\">\n                                <div className=\"col-auto mt-4\">\n                                    <h1 className=\"page-header-title\">\n                                        <div className=\"page-header-icon\">\n                                            <Icon.Users className=\"feather-xl text-white-50\"/>\n                                        </div>\n                                        List des cours\n                                    </h1>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </header>\n                <div className=\"container mt-5\">\n                    <div className=\"row\">\n                        <div className=\"col-xxl-12 col-xl-12\">\n                            <div className=\"card mb-4\">\n                                <div className=\"card-body\">\n                                    <div className=\"datatable\">\n                                        <Form\n                                            form={form}\n                                            name=\"advanced_search\"\n                                            className=\"ant-advanced-search-form\"\n                                            onFinish={onFinish}\n                                            layout=\"vertical\"\n                                        >\n                                            <Col span={12} offset={6} key=\"0\">\n                                                <Form.Item\n                                                    name=\"titreCour\"\n                                                    label=\"Titre cour\"\n                                                    rules={[{required: true, message: 'Titre cour required!!'},]}\n                                                >\n                                                    <Input size=\"middle\" className=\"form-control py-2\"/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={12} offset={6} key=\"0\">\n                                                <Form.Item\n                                                    name=\"nbrHeure\"\n                                                    label=\"Nombre heure\"\n                                                    rules={[{required: true, message: 'nbrHeure required!!'},]}\n                                                >\n                                                    <Input type=\"number\" size=\"middle\" className=\"form-control py-2\"\n                                                           value={1}/>\n                                                </Form.Item>\n                                            </Col>\n                                            <Col span={12} offset={6} key=\"2\">\n                                                <Form.Item\n                                                    name=\"contenue\"\n                                                    label=\"contenue du formation\"\n                                                    rules={[{required: true, message: 'contenue required!!'},]}\n                                                >\n                                                    <Dragger  {...props} >\n                                                        <p className=\"ant-upload-drag-icon\">\n                                                            <InboxOutlined/>\n                                                        </p>\n                                                        <p className=\"ant-upload-text\">Clicker ou bien glisser votre\n                                                            fichier </p>\n                                                    </Dragger>\n                                                </Form.Item>\n                                            </Col>\n                                            <Row>\n                                                <Col span={24} style={{textAlign: 'right'}}>\n                                                    <Button type=\"primary\" htmlType=\"submit\">\n                                                        Ajouter\n                                                    </Button>\n                                                    <Button\n                                                        style={{margin: '0 8px'}}\n                                                        onClick={() => {\n                                                            form.resetFields();\n                                                        }}\n                                                    >\n                                                        Reset\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-xxl-12 col-xl-12\">\n                            <div className=\"card mb-4\">\n                                <div className=\"card-body\">\n                                    <div className=\"datatable\">\n                                        <List\n                                            grid={gridConfig}\n                                            dataSource={data}\n                                            renderItem={item => (\n                                                <List.Item>\n                                                    <Card title={item?.titreCour}>\n                                                        <FilePdfOutlined />  <a href={item?.contenue}>{item?.contenue}</a>\n                                                    </Card>\n                                                </List.Item>\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n\n        </div>\n    );\n};\n\nexport default MatiÃ©re;","/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/absence/absence.jsx",[],"/home/ae/Documents/ENSA/jee/projet/main_project/front/front-prof/src/component/note/note.js",["119","120","121"],"import React, {useState, useRef, useCallback, useEffect} from 'react'\nimport {Table, Space, Button, Popconfirm, Input, message, Row, Col, Form} from 'antd';\nimport * as Icon from 'react-feather';\nimport Highlighter from 'react-highlight-words';\nimport {SearchOutlined} from '@ant-design/icons';\nimport axios from 'axios';\nimport {BASE_URL} from '../../config/config';\nimport {useParams} from \"react-router\";\n\n\nconst {Column} = Table;\n\nfunction Note(props) {\n\n\n    const searchInput = useRef();\n    const [searchText, setSearchText] = useState(\"\");\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\n    const getColumnSearchProps = dataIndex => ({\n\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm, clearFilters}) => (\n            <div style={{padding: 8}}>\n                <Input\n                    ref={searchInput}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{width: 188, marginBottom: 8, display: 'block'}}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined/>}\n                        size=\"small\"\n                        style={{width: 90}}\n                    >\n                        Search\n                    </Button>\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{width: 90}}>\n                        Reset\n                    </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{color: filtered ? '#1890ff' : undefined}}/>,\n        onFilter: (value, record) =>\n            record[dataIndex]\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n                : '',\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n                setTimeout(() => searchInput.current.select(), 100);\n            }\n        },\n        return: text =>\n            searchedColumn === dataIndex ?\n                (<Highlighter\n                    highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\n                    searchWords={[searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />)\n                :\n                (text),\n    });\n\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n        setSearchText(selectedKeys[0]);\n        setSearchedColumn(dataIndex)\n    };\n\n    const handleReset = clearFilters => {\n        clearFilters();\n        setSearchText(\"\")\n    };\n\n\n    const {id} = useParams();\n    const [etudiants, setEtudiants] = useState([]);\n    const [pagination, setPagination] = useState({\n        current: 1,\n        pageSize: 8,\n    })\n\n    const getStuent = useCallback(async () => {\n        axios.get(`${BASE_URL}api/users/etudiants/${id}`)\n            .then(res => setEtudiants(res.data))\n            .catch((err) => message.error(err.message))\n    }, [id]);\n\n    useEffect(() => {\n        getStuent();\n    }, [getStuent])\n\n\n    const addNote = useCallback(async (data) => {\n        await axios({\n            method: \"POST\",\n            url: `${BASE_URL}api/notes/add`,\n            data: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            }\n        }).then(res => {\n            if (res.status === 200)\n                message.success(\"Note est ajouter\")\n        }).catch((err) => {\n            console.error(err)\n        })\n    }, []);\n\n    const onFinish = async (value) => {\n        const data = {\n            idEt: value.id,\n            idElemnt: id,\n            note: value.note\n        }\n        console.log(\"data to send --> \", data);\n        await addNote(data);\n    }\n\n\n    return (\n        <div id=\"layoutSidenav_content\">\n            <main>\n                <header className=\"page-header page-header-dark bg-gray-500\">\n                    <div className=\"container\">\n                        <div className=\"page-header-content pt-4\">\n                            <div className=\"row align-items-center justify-content-center\">\n                                <div className=\"col-auto mt-4\">\n                                    <h1 className=\"page-header-title\">\n                                        <div className=\"page-header-icon\">\n                                            <Icon.Users className=\"feather-xl text-white-50\"/>\n                                        </div>\n                                        Gestion d'absence\n                                    </h1>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </header>\n                <div className=\"container mt-5\">\n                    <div className=\"row\">\n                        <div className=\"col-xxl-12 col-xl-12\">\n                            <div className=\"card mb-4\">\n                                <div className=\"card-body\">\n                                    <div className=\"datatable\">\n                                        <Table\n                                            dataSource={etudiants}\n                                            pagination={pagination}\n                                            onChange={e => setPagination(e)}\n                                            size=\"middle\"\n                                        >\n                                            <Column title=\"ID\" dataIndex=\"id\" key=\"id\"/>\n                                            <Column\n                                                title=\"Nom\"\n                                                dataIndex=\"nom\"\n                                                key=\"nom\"\n                                                {...getColumnSearchProps('nom')}\n\n                                            />\n                                            <Column\n                                                title=\"Prenom\"\n                                                dataIndex=\"prenom\"\n                                                key=\"prenom\"\n                                                {...getColumnSearchProps('prenom')}\n                                            />\n                                            <Column\n                                                title=\"Cne\"\n                                                dataIndex=\"cne\"\n                                                key=\"cne\"\n                                                {...getColumnSearchProps('cne')}\n                                            />\n                                            <Column\n                                                title=\"Action\"\n                                                key=\"action\"\n                                                render={(text, record) => (\n                                                    <Form\n                                                        layout=\"inline\"\n                                                        onFinish={onFinish}\n                                                    >\n                                                        <Form.Item\n                                                            name=\"id\"\n                                                            initialValue={record.id}\n                                                        />\n                                                        <Form.Item\n                                                            name=\"note\"\n                                                            rules={[{required: true, message: \"La note est require!!\"}]}\n                                                        >\n                                                            <Input type=\"number\"/>\n                                                        </Form.Item>\n                                                        <Form.Item>\n                                                            <button size=\"middle\"\n                                                                    className=\"btn btn-success btn-icon btn-xs\">\n                                                                <i className=\"fa fa-plus\"\n                                                                   aria-hidden=\"true\"/>\n                                                            </button>\n                                                        </Form.Item>\n                                                    </Form>\n                                                )}\n                                            />\n                                        </Table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n\n        </div>\n    );\n}\n\nexport default Note;",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":37,"column":1,"nodeType":"128","endLine":41,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":25,"column":12,"nodeType":"131","endLine":25,"endColumn":14,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":59,"column":12,"nodeType":"131","endLine":59,"endColumn":22,"suggestions":"134"},{"ruleId":"126","severity":1,"message":"127","line":7,"column":1,"nodeType":"128","endLine":13,"endColumn":2},{"ruleId":"126","severity":1,"message":"127","line":6,"column":1,"nodeType":"128","endLine":12,"endColumn":2},{"ruleId":"126","severity":1,"message":"127","line":3,"column":1,"nodeType":"128","endLine":10,"endColumn":2},{"ruleId":"129","severity":1,"message":"133","line":62,"column":9,"nodeType":"131","endLine":62,"endColumn":28,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":5,"column":23,"nodeType":"138","messageId":"139","endLine":5,"endColumn":46},{"ruleId":"129","severity":1,"message":"140","line":29,"column":12,"nodeType":"131","endLine":29,"endColumn":16,"suggestions":"141"},{"ruleId":"129","severity":1,"message":"140","line":38,"column":12,"nodeType":"131","endLine":38,"endColumn":16,"suggestions":"142"},{"ruleId":"136","severity":1,"message":"143","line":15,"column":12,"nodeType":"138","messageId":"139","endLine":15,"endColumn":14},{"ruleId":"129","severity":1,"message":"144","line":78,"column":9,"nodeType":"131","endLine":78,"endColumn":11,"suggestions":"145"},{"ruleId":"136","severity":1,"message":"146","line":2,"column":31,"nodeType":"138","messageId":"139","endLine":2,"endColumn":41},{"ruleId":"136","severity":1,"message":"147","line":2,"column":59,"nodeType":"138","messageId":"139","endLine":2,"endColumn":62},{"ruleId":"136","severity":1,"message":"148","line":2,"column":64,"nodeType":"138","messageId":"139","endLine":2,"endColumn":67},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["151"],"React Hook useCallback has a missing dependency: 'getUserByEmail'. Either include it or remove the dependency array.",["152"],["153"],"no-unused-vars","'UsergroupDeleteOutlined' is defined but never used.","Identifier","unusedVar","React Hook useCallback has an unnecessary dependency: 'id'. Either exclude it or remove the dependency array.",["154"],["155"],"'id' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'data' and 'location.state.id'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["156"],"'Popconfirm' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [dispatch]",{"range":"168","text":"169"},"Update the dependencies array to be: [dispatch, getUserByEmail]",{"range":"170","text":"171"},"Update the dependencies array to be: [dispatch, getUserByEmail, history]",{"range":"172","text":"173"},"Update the dependencies array to be: []",{"range":"174","text":"175"},{"range":"176","text":"175"},"Update the dependencies array to be: [data, location.state.id]",{"range":"177","text":"178"},[968,970],"[dispatch]",[2254,2264],"[dispatch, getUserByEmail]",[2400,2419],"[dispatch, getUserByEmail, history]",[995,999],"[]",[1376,1380],[2478,2480],"[data, location.state.id]"]